apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: eks-space
  labels:
    spaces.upbound.io/cluster-type: eks
spec:
  writeConnectionSecretsToNamespace: upbound-system
  compositeTypeRef:
    apiVersion: example.upbound.io/v1alpha1
    kind: XSpace
  resources:
  - name: cert-manager
    base:
      apiVersion: helm.crossplane.io/v1beta1
      kind: Release
      metadata: 
        annotations:
          crossplane.io/external-name: cert-manager
      spec:
        forProvider:
          namespace: cert-manager
          chart:
            name: cert-manager
            repository: https://charts.jetstack.io
            version: v1.13.1
          values:
            installCRDs: true
    patches:
    - fromFieldPath: spec.parameters.clusterId
      toFieldPath: spec.providerConfigRef.name
  - name: aws-load-balancer-controller
    base:
      apiVersion: helm.crossplane.io/v1beta1
      kind: Release
      metadata:
        annotations:
          crossplane.io/external-name: aws-load-balancer-controller
      spec:
        forProvider:
          namespace: kube-system
          chart: 
            name: aws-load-balancer-controller
            repository: https://aws.github.io/eks-charts
          values:
            serviceAccount:
              create: false
              name: aws-load-balancer-controller
    patches:
    - fromFieldPath: spec.parameters.clusterId
      toFieldPath: spec.forProvider.values.clusterName
    - fromFieldPath: spec.parameters.clusterId
      toFieldPath: spec.providerConfigRef.name
  - name: aws-load-balancer-controller-healthcheck
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        managementPolicy: Observe
        forProvider:
          manifest:
            apiVersion: v1
            kind: Endpoints
            metadata:
              name: aws-load-balancer-webhook-service
              namespace: kube-system
    patches:
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.manifest.metadata.name
      toFieldPath: status.loadBalancer
      transforms:
      - type: map
        map:
          "aws-load-balancer-webhook-service": "Ready"
      policy:
        fromFieldPath: Required
    - fromFieldPath: spec.parameters.clusterId
      toFieldPath: spec.providerConfigRef.name
  - name: ingress-nginx
    base: 
      apiVersion: helm.crossplane.io/v1beta1
      kind: Release
      metadata:
        annotations:
          crossplane.io/external-name: ingress-nginx
      spec:
        forProvider:
          namespace: ingress-nginx
          chart:
            name: ingress-nginx
            repository: https://kubernetes.github.io/ingress-nginx
            version: "4.7.1"
          values:
            controller:
              service:
                type: LoadBalancer
                annotations:
                  service.beta.kubernetes.io/aws-load-balancer-type: external
                  service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
                  service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
                  service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: http
                  service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: /healthz
                  service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "10254"
    patches:
    - fromFieldPath: spec.parameters.clusterId
      toFieldPath: spec.providerConfigRef.name
  - name: ingress-nginx-healthcheck
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        managementPolicy: Observe
        forProvider:
          manifest:
            apiVersion: v1
            kind: Endpoints
            metadata:
              name: ingress-nginx-controller-admission
              namespace: ingress-nginx
    patches:
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.manifest.metadata.name
      toFieldPath: status.ingress
      transforms:
      - type: map
        map:
          "ingress-nginx-controller-admission": "Ready"
      policy:
        fromFieldPath: Required
    - fromFieldPath: spec.parameters.clusterId
      toFieldPath: spec.providerConfigRef.name
  - name: universal-crossplane
    base:
      apiVersion: helm.crossplane.io/v1beta1
      kind: Release
      metadata:
        annotations:
          crossplane.io/external-name: universal-crossplane
      spec:
        forProvider:
          namespace: upbound-system
          chart:
            name: universal-crossplane
            repository: https://charts.upbound.io/stable
            version: 1.13.2-up.2
        rollbackLimit: 5
    patches:
    - fromFieldPath: status.loadBalancer
      toFieldPath: spec.loadBalancerReady
      policy:
        fromFieldPath: Required
    - fromFieldPath: status.ingress
      toFieldPath: spec.ingressReady
      policy:
        fromFieldPath: Required
    - fromFieldPath: spec.parameters.clusterId
      toFieldPath: spec.providerConfigRef.name
  - name: provider-kubernetes
    base:
      apiVersion: example.upbound.io/v1alpha1
      kind: XProvider
      spec:
        parameters:
          providerName: provider-kubernetes
          providerPkg: "xpkg.upbound.io/crossplane-contrib/provider-kubernetes:v0.9.0"
    patches:
    - fromFieldPath: spec.parameters.clusterId
      toFieldPath: spec.providerConfigRef.name
  - name: provider-kubernetes-providerconfig
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: kubernetes.crossplane.io/v1alpha1
            kind: ProviderConfig
            metadata:
              name: upbound-cluster
            spec:
              credentials:
                  source: InjectedIdentity
    patches:
    - fromFieldPath: spec.parameters.clusterId
      toFieldPath: spec.providerConfigRef.name
  - name: provider-helm
    base:
      apiVersion: example.upbound.io/v1alpha1
      kind: XProvider
      spec:
        parameters:
          providerName: provider-helm
          providerPkg: "xpkg.upbound.io/crossplane-contrib/provider-helm:v0.15.0"
    patches:
    - fromFieldPath: spec.parameters.clusterId
      toFieldPath: spec.providerConfigRef.name
  - name: provider-helm-providerconfig
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: helm.crossplane.io/v1beta1
            kind: ProviderConfig
            metadata:
              name: upbound-cluster
            spec:
              credentials:
                  source: InjectedIdentity
    patches:
    - fromFieldPath: spec.parameters.clusterId
      toFieldPath: spec.providerConfigRef.name
  - name: upbound-pull-secret 
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec: 
        forProvider:
          manifest:
            apiVersion: v1
            kind: Secret
            type: kubernetes.io/dockerconfigjson
            metadata:
              name: upbound-pull-secret
              namespace: upbound-system
        references:
        - patchesFrom: 
            apiVersion: v1
            kind: Secret
            fieldPath: data[.dockerconfigjson]
          toFieldPath: data[.dockerconfigjson]
    patches:
    - fromFieldPath: spec.parameters.spacesPullSecretRef
      toFieldPath: spec.references[0].patchesFrom
      policy: 
        mergeOptions:
          keepMapValues: true
    - fromFieldPath: spec.parameters.clusterId
      toFieldPath: spec.providerConfigRef.name
  - name: spaces
    base:
      apiVersion: helm.crossplane.io/v1beta1
      kind: Release
      metadata: 
        annotations:
          crossplane.io/external-name: spaces
      spec:
        forProvider:
          namespace: upbound-system
          chart:
            name: spaces
            repository: oci://us-west1-docker.pkg.dev/orchestration-build/upbound-environments
          values:
            clusterType: eks
          set:
          - name: "ingress.host"
            value: "replace"
          - name: "features.alpha.argocdPlugin.enabled"
            value: "true"
          - name: "features.alpha.argocdPlugin.target.namespace"
            value: "argocd"
        rollbackLimit: 5
    patches:
    - fromFieldPath: status.loadBalancer
      toFieldPath: spec.loadBalancerReady
      policy:
        fromFieldPath: Required
    - fromFieldPath: status.ingress
      toFieldPath: spec.ingressReady
      policy:
        fromFieldPath: Required
    - fromFieldPath: spec.parameters.helmCredentialsSecretRef
      toFieldPath: spec.forProvider.chart.pullSecretRef
    - fromFieldPath: spec.parameters.version
      toFieldPath: spec.forProvider.chart.version
    - fromFieldPath: spec.parameters.account
      toFieldPath: spec.forProvider.values.account
    - fromFieldPath: spec.parameters.host
      toFieldPath: spec.forProvider.set[0].value
    - fromFieldPath: spec.parameters.clusterId
      toFieldPath: spec.providerConfigRef.name