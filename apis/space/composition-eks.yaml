apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  labels:
    spaces.upbound.io/cluster-type: eks
  name: eks.xspaces.example.upbound.io
spec:
  compositeTypeRef:
    apiVersion: example.upbound.io/v1alpha1
    kind: XSpace
  mode: Pipeline
  pipeline:
  - functionRef:
      name: upbound-function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      environment: null
      kind: Resources
      patchSets: []
      resources:
      - base:
          apiVersion: helm.crossplane.io/v1beta1
          kind: Release
          metadata:
            annotations:
              crossplane.io/external-name: cert-manager
          spec:
            forProvider:
              chart:
                name: cert-manager
                repository: https://charts.jetstack.io
                version: v1.13.1
              namespace: cert-manager
              values:
                installCRDs: true
        name: cert-manager
        patches:
        - fromFieldPath: spec.parameters.clusterId
          toFieldPath: spec.providerConfigRef.name
          type: FromCompositeFieldPath
      - base:
          apiVersion: helm.crossplane.io/v1beta1
          kind: Release
          metadata:
            annotations:
              crossplane.io/external-name: aws-load-balancer-controller
          spec:
            forProvider:
              chart:
                name: aws-load-balancer-controller
                repository: https://aws.github.io/eks-charts
              namespace: kube-system
              values:
                serviceAccount:
                  create: false
                  name: aws-load-balancer-controller
        name: aws-load-balancer-controller
        patches:
        - fromFieldPath: spec.parameters.clusterId
          toFieldPath: spec.forProvider.values.clusterName
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.clusterId
          toFieldPath: spec.providerConfigRef.name
          type: FromCompositeFieldPath
      - base:
          apiVersion: kubernetes.crossplane.io/v1alpha1
          kind: Object
          spec:
            forProvider:
              manifest:
                apiVersion: v1
                kind: Endpoints
                metadata:
                  name: aws-load-balancer-webhook-service
                  namespace: kube-system
            managementPolicy: Observe
        name: aws-load-balancer-controller-healthcheck
        patches:
        - fromFieldPath: status.atProvider.manifest.metadata.name
          policy:
            fromFieldPath: Required
          toFieldPath: status.loadBalancer
          transforms:
          - map:
              aws-load-balancer-webhook-service: Ready
            type: map
          type: ToCompositeFieldPath
        - fromFieldPath: spec.parameters.clusterId
          toFieldPath: spec.providerConfigRef.name
          type: FromCompositeFieldPath
      - base:
          apiVersion: helm.crossplane.io/v1beta1
          kind: Release
          metadata:
            annotations:
              crossplane.io/external-name: ingress-nginx
          spec:
            forProvider:
              chart:
                name: ingress-nginx
                repository: https://kubernetes.github.io/ingress-nginx
                version: 4.7.1
              namespace: ingress-nginx
              values:
                controller:
                  service:
                    annotations:
                      service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: /healthz
                      service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "10254"
                      service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: http
                      service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
                      service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
                      service.beta.kubernetes.io/aws-load-balancer-type: external
                    type: LoadBalancer
        name: ingress-nginx
        patches:
        - fromFieldPath: spec.parameters.clusterId
          toFieldPath: spec.providerConfigRef.name
          type: FromCompositeFieldPath
      - base:
          apiVersion: kubernetes.crossplane.io/v1alpha1
          kind: Object
          spec:
            forProvider:
              manifest:
                apiVersion: v1
                kind: Endpoints
                metadata:
                  name: ingress-nginx-controller-admission
                  namespace: ingress-nginx
            managementPolicy: Observe
        name: ingress-nginx-healthcheck
        patches:
        - fromFieldPath: status.atProvider.manifest.metadata.name
          policy:
            fromFieldPath: Required
          toFieldPath: status.ingress
          transforms:
          - map:
              ingress-nginx-controller-admission: Ready
            type: map
          type: ToCompositeFieldPath
        - fromFieldPath: spec.parameters.clusterId
          toFieldPath: spec.providerConfigRef.name
          type: FromCompositeFieldPath
      - base:
          apiVersion: helm.crossplane.io/v1beta1
          kind: Release
          metadata:
            annotations:
              crossplane.io/external-name: universal-crossplane
          spec:
            forProvider:
              chart:
                name: universal-crossplane
                repository: https://charts.upbound.io/stable
                version: 1.13.2-up.2
              namespace: upbound-system
            rollbackLimit: 5
        name: universal-crossplane
        patches:
        - fromFieldPath: status.loadBalancer
          policy:
            fromFieldPath: Required
          toFieldPath: spec.loadBalancerReady
          type: FromCompositeFieldPath
        - fromFieldPath: status.ingress
          policy:
            fromFieldPath: Required
          toFieldPath: spec.ingressReady
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.clusterId
          toFieldPath: spec.providerConfigRef.name
          type: FromCompositeFieldPath
      - base:
          apiVersion: example.upbound.io/v1alpha1
          kind: XProvider
          spec:
            parameters:
              providerName: provider-kubernetes
              providerPkg: xpkg.upbound.io/crossplane-contrib/provider-kubernetes:v0.9.0
        name: provider-kubernetes
        patches:
        - fromFieldPath: spec.parameters.clusterId
          toFieldPath: spec.providerConfigRef.name
          type: FromCompositeFieldPath
      - base:
          apiVersion: kubernetes.crossplane.io/v1alpha1
          kind: Object
          spec:
            forProvider:
              manifest:
                apiVersion: kubernetes.crossplane.io/v1alpha1
                kind: ProviderConfig
                metadata:
                  name: upbound-cluster
                spec:
                  credentials:
                    source: InjectedIdentity
        name: provider-kubernetes-providerconfig
        patches:
        - fromFieldPath: spec.parameters.clusterId
          toFieldPath: spec.providerConfigRef.name
          type: FromCompositeFieldPath
      - base:
          apiVersion: example.upbound.io/v1alpha1
          kind: XProvider
          spec:
            parameters:
              providerName: provider-helm
              providerPkg: xpkg.upbound.io/crossplane-contrib/provider-helm:v0.15.0
        name: provider-helm
        patches:
        - fromFieldPath: spec.parameters.clusterId
          toFieldPath: spec.providerConfigRef.name
          type: FromCompositeFieldPath
      - base:
          apiVersion: kubernetes.crossplane.io/v1alpha1
          kind: Object
          spec:
            forProvider:
              manifest:
                apiVersion: helm.crossplane.io/v1beta1
                kind: ProviderConfig
                metadata:
                  name: upbound-cluster
                spec:
                  credentials:
                    source: InjectedIdentity
        name: provider-helm-providerconfig
        patches:
        - fromFieldPath: spec.parameters.clusterId
          toFieldPath: spec.providerConfigRef.name
          type: FromCompositeFieldPath
      - base:
          apiVersion: kubernetes.crossplane.io/v1alpha1
          kind: Object
          spec:
            forProvider:
              manifest:
                apiVersion: v1
                kind: Secret
                metadata:
                  name: upbound-pull-secret
                  namespace: upbound-system
                type: kubernetes.io/dockerconfigjson
            references:
            - patchesFrom:
                apiVersion: v1
                fieldPath: data[.dockerconfigjson]
                kind: Secret
              toFieldPath: data[.dockerconfigjson]
        name: upbound-pull-secret
        patches:
        - fromFieldPath: spec.parameters.spacesPullSecretRef
          policy:
            mergeOptions:
              keepMapValues: true
          toFieldPath: spec.references[0].patchesFrom
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.clusterId
          toFieldPath: spec.providerConfigRef.name
          type: FromCompositeFieldPath
      - base:
          apiVersion: helm.crossplane.io/v1beta1
          kind: Release
          metadata:
            annotations:
              crossplane.io/external-name: spaces
          spec:
            forProvider:
              chart:
                name: spaces
                repository: oci://us-west1-docker.pkg.dev/orchestration-build/upbound-environments
              namespace: upbound-system
              set:
              - name: ingress.host
                value: replace
              - name: features.alpha.argocdPlugin.enabled
                value: "true"
              - name: features.alpha.argocdPlugin.target.namespace
                value: argocd
              values:
                clusterType: eks
            rollbackLimit: 5
        name: spaces
        patches:
        - fromFieldPath: status.loadBalancer
          policy:
            fromFieldPath: Required
          toFieldPath: spec.loadBalancerReady
          type: FromCompositeFieldPath
        - fromFieldPath: status.ingress
          policy:
            fromFieldPath: Required
          toFieldPath: spec.ingressReady
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.helmCredentialsSecretRef
          toFieldPath: spec.forProvider.chart.pullSecretRef
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.version
          toFieldPath: spec.forProvider.chart.version
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.account
          toFieldPath: spec.forProvider.values.account
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.host
          toFieldPath: spec.forProvider.set[0].value
          type: FromCompositeFieldPath
        - fromFieldPath: spec.parameters.clusterId
          toFieldPath: spec.providerConfigRef.name
          type: FromCompositeFieldPath
    step: patch-and-transform
  writeConnectionSecretsToNamespace: upbound-system
